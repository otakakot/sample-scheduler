name: release staging trigger
run-name: ${{ github.workflow }} (${{ github.ref_name }} by ${{ github.actor }})
concurrency: ${{ github.workflow }}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: |
          検証環境のリリースを手動で行う場合に使用します。
          リリースタグの名前を指定してください。
          `2006-01-02-1` のように指定します。
        required: true
        type: string
  schedule:
    - cron: '0 0 * * *'
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag-name: ${{ steps.generate-tag.outputs.tag }}
    steps:
      - name: Generate Tag Name
        id: generate-tag
        run: |
          if [[ -z "${{ inputs.tag }}" ]]; then
            echo "tag=pre-release-$(TZ=JST-9 date '+%Y-%m-%d-1')" >> $GITHUB_OUTPUT
          else
            echo "tag=pre-release-${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi
      - name: Validate Tag Name
        run: |
          pattern="^pre-release-[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]$"
          if [[ ${{ steps.generate-tag.outputs.tag }} =~ $pattern ]]; then
            echo ${{ steps.generate-tag.outputs.tag }}
            exit 0
          else
            echo "tag is invalid"
            exit 1
          fi
  create-tag:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private-key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: otakakot/sample-resource
          ref: main
          token: ${{ steps.generate-token.outputs.token }}
      - name: Push Release Tag
        run: |
          git config --global credential.helper 'github-apps -privatekey ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }} -appid ${{ secrets.BOT_GITHUB_APP_ID }} -login ${{ github.repository_owner }}'
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ needs.prepare.outputs.tag-name }}
          git push origin ${{ needs.prepare.outputs.tag-name }}
